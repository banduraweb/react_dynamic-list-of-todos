{"version":3,"sources":["components/User.js","components/TodoItem.js","api/urls.js","api/Api.js","components/TodoList.js","App.js","index.js"],"names":["User","_ref","name","user","react_default","a","createElement","Fragment","TodoItem","todo","id","title","completed","components_User","urls","USERS","TODOS","Api","url","fetch","then","response","json","TodoList","ActiveSortBtn","filterType","_useState","useState","loading","preparedData","_useState2","Object","slicedToArray","state","setState","useEffect","todos","users","regenerator_default","async","_context","prev","next","awrap","getData","sent","prevState","objectSpread2","map","find","userId","stop","fetchData","className","Array","values","key","replace","sortById","sortByStatus","sortByUsersName","sortByTitle","sortValue","clickedSortBtn","result","toConsumableArray","sort","b","localeCompare","dataFromServerForRender","components_TodoItem","SORT_TYPE","App","isClickedLoadTodos","isActiveSortBtn","type","onClick","button","i","item","activeIconBtn","components_TodoList","ReactDOM","render","src_App","document","getElementById"],"mappings":"8LAaeA,MAVf,SAAAC,GAAwB,IACdC,EADcD,EAARE,KACND,KAER,OACEE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,UAAKJ,KCcIM,MAlBf,SAAAP,GAA4B,IAARQ,EAAQR,EAARQ,KACVC,EAA+BD,EAA/BC,GAAIC,EAA2BF,EAA3BE,MAAOC,EAAoBH,EAApBG,UAAWT,EAASM,EAATN,KAE9B,OACEC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KAEEH,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAKI,GACLN,EAAAC,EAAAC,cAAA,UAAKK,GACLP,EAAAC,EAAAC,cAACO,EAAD,CAAMV,KAAMA,IACZC,EAAAC,EAAAC,cAAA,UAAKM,EAAY,YAAc,qBCf1BE,EAAA,CACbC,MAAO,6CACPC,MAAO,8CCFMC,EAAA,SAASC,GACtB,OAAOC,MAAMD,GAAKE,KAAK,SAAAC,GAAQ,OAAIA,EAASC,UCkG/BC,MA7Ff,SAAAtB,GAAiD,IAA7BuB,EAA6BvB,EAA7BuB,cAAeC,EAAcxB,EAAdwB,WAAcC,EAMrBC,mBALL,CACnBC,SAAS,EACTC,aAAc,KAH+BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAL,EAAA,GAMxCO,EANwCH,EAAA,GAMjCI,EANiCJ,EAAA,GAQ/CK,oBAAU,YACR,eAAAC,EAAAC,EAAAC,EAAAjC,EAAAkC,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAAAJ,EAAAjC,EAAAsC,MACsBC,EAAQ1B,EAAIF,QADlC,cACQoB,EADRI,EAAAK,KAAAL,EAAAE,KAAA,EAAAJ,EAAAjC,EAAAsC,MAEsBC,EAAQ1B,EAAIH,QAFlC,OAEQsB,EAFRG,EAAAK,KAIEX,EAAS,SAAAY,GAAS,OAAAf,OAAAgB,EAAA,EAAAhB,CAAA,GACbe,EADa,CAEhBlB,SAAS,EACTC,aAAcO,EAAMY,IAAI,SAAAvC,GAAI,OAAAsB,OAAAgB,EAAA,EAAAhB,CAAA,GACvBtB,EADuB,CAE1BN,KAAMkC,EAAMY,KAAK,SAAA9C,GAAI,OAAIA,EAAKO,KAAOD,EAAKyC,iBAThD,wBAAAV,EAAAW,UAaEC,IACD,IAvB4C,IAyBvCvB,EAAiBI,EAAjBJ,aAsCR,OAEEzB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KAEI0B,EAAML,SAGJxB,EAAAC,EAAAC,cAAA,SAAO+C,UAAU,UACfjD,EAAAC,EAAAC,cAAA,UACGgD,MAAMvB,OAAOwB,OAAO9B,GAClBuB,IAAI,SAAApB,GAAO,OACVxB,EAAAC,EAAAC,cAAA,MAAIkD,IAAK5B,GACNA,EACE6B,QAAQ,YAAa,oBAjDV,WAAM,IAC5BC,EAAyDjC,EAAzDiC,SAAUC,EAA+ClC,EAA/CkC,aAAcC,EAAiCnC,EAAjCmC,gBAAiBC,EAAgBpC,EAAhBoC,YACzCC,EAA8BtC,EAA9BsC,UAAWC,EAAmBvC,EAAnBuC,eACfC,EAAS,GAEb,OAAQF,GACN,KAAKJ,EACHM,EAAUD,EAENhC,OAAAkC,EAAA,EAAAlC,CAAIF,GAAcqC,KAAK,SAAC7D,EAAG8D,GAAJ,OAAUA,EAAEzD,GAAKL,EAAEK,KAD1CqB,OAAAkC,EAAA,EAAAlC,CAAIF,GAAcqC,KAAK,SAAC7D,EAAG8D,GAAJ,OAAU9D,EAAEK,GAAKyD,EAAEzD,KAE9C,MACF,KAAKiD,EACHK,EAAUD,EAENhC,OAAAkC,EAAA,EAAAlC,CAAIF,GAAcqC,KAAK,SAAC7D,EAAG8D,GAAJ,OAAUA,EAAEvD,UAAYP,EAAEO,YADjDmB,OAAAkC,EAAA,EAAAlC,CAAIF,GAAcqC,KAAK,SAAC7D,EAAG8D,GAAJ,OAAU9D,EAAEO,UAAYuD,EAAEvD,YAErD,MACF,KAAKgD,EACHI,EAAUD,EAGNhC,OAAAkC,EAAA,EAAAlC,CAAIF,GACHqC,KAAK,SAAC7D,EAAG8D,GAAJ,OAAUA,EAAEhE,KAAKD,KAAKkE,cAAc/D,EAAEF,KAAKD,QAHjD6B,OAAAkC,EAAA,EAAAlC,CAAIF,GACHqC,KAAK,SAAC7D,EAAG8D,GAAJ,OAAU9D,EAAEF,KAAKD,KAAKkE,cAAcD,EAAEhE,KAAKD,QAGrD,MACF,KAAK2D,EACHG,EAAUD,EAGNhC,OAAAkC,EAAA,EAAAlC,CAAIF,GACHqC,KAAK,SAAC7D,EAAG8D,GAAJ,OAAUA,EAAExD,MAAMyD,cAAc/D,EAAEM,SAHxCoB,OAAAkC,EAAA,EAAAlC,CAAIF,GACHqC,KAAK,SAAC7D,EAAG8D,GAAJ,OAAU9D,EAAEM,MAAMyD,cAAcD,EAAExD,SAG5C,MACF,QAASqD,EAASnC,EAGpB,OAAOmC,EAyBJK,GAA0BrB,IAAI,SAAAvC,GAAI,OACjCL,EAAAC,EAAAC,cAACgE,EAAD,CAAU7D,KAAMA,EAAM+C,IAAK/C,EAAKC,SCxFlC6D,SAAY,CAChBb,SAAU,WACVG,YAAa,QACbD,gBAAiB,YACjBD,aAAc,WAwGDa,MArGf,WACE,IADa9C,EASaC,mBARL,CACnB8C,oBAAoB,EACpBC,gBAAiB,CACfX,gBAAgB,EAChBD,UAAW,MALFhC,EAAAC,OAAAC,EAAA,EAAAD,CAAAL,EAAA,GASNO,EATMH,EAAA,GASCI,EATDJ,EAAA,GAgCL4C,EAAwCzC,EAAxCyC,gBAAiBD,EAAuBxC,EAAvBwC,mBACjBV,EAA8BW,EAA9BX,eAAgBD,EAAcY,EAAdZ,UAcxB,OACE1D,EAAAC,EAAAC,cAAA,OAAK+C,UAAU,OAEbjD,EAAAC,EAAAC,cAAA,MAAI+C,UAAU,OAAd,0BACEoB,GACArE,EAAAC,EAAAC,cAAA,UACE+C,UAAU,qCACVsB,KAAK,SACLC,QAAS,WA3CV3C,EAAMwC,oBACTvC,EAAS,SAAAY,GAAS,OAAAf,OAAAgB,EAAA,EAAAhB,CAAA,GACbe,EADa,CAEhB2B,oBAAoB,QAqCpB,aAQErE,EAAAC,EAAAC,cAAA,KAAG+C,UAAU,wBAAb,oBAKHoB,GAECrE,EAAAC,EAAAC,cAAA,SAAO+C,UAAU,uCACfjD,EAAAC,EAAAC,cAAA,aAEEF,EAAAC,EAAAC,cAAA,UACGyB,OAAOwB,OAAOgB,GAAWvB,IAAI,SAAC6B,EAAQC,GAAT,OAC5B1E,EAAAC,EAAAC,cAAA,MAAIkD,IAAKqB,GACPzE,EAAAC,EAAAC,cAAA,UACEsE,QAAS,kBAtDFG,EAsDsBF,OArD7C3C,EAAS,SAAAY,GAAS,OAAAf,OAAAgB,EAAA,EAAAhB,CAAA,GACbe,EADa,CAEhB4B,gBAAiB,CACfX,eAAgBW,EAAgBZ,YAAciB,IACzCL,EAAgBX,eAErBD,UAAWiB,OAPE,IAAMA,GAuDP1B,UAAU,+BACVsB,KAAK,UAGJE,EACDzE,EAAAC,EAAAC,cAAA,KAAG+C,UAAU,wBA7CT,SAACwB,GACrB,OAAIf,IAAce,GAAUd,EACnB,kBAGLD,IAAce,GAAWd,EAItB,gBAHE,gBAwCUiB,CAAcH,UAQ3BzE,EAAAC,EAAAC,cAAC2E,EAAD,CACEzD,cAAekD,EACfjD,WAAY8C,OClGxBW,IAASC,OAAO/E,EAAAC,EAAAC,cAAC8E,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.4c284098.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction User({ user }) {\n  const { name } = user;\n\n  return (\n    <>\n      <td>{name}</td>\n    </>\n  );\n}\n\nexport default User;\n\nUser.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string,\n  }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport User from './User';\n\nfunction TodoItem({ todo }) {\n  const { id, title, completed, user } = todo;\n\n  return (\n    <>\n\n      <tbody>\n        <tr>\n          <td>{id}</td>\n          <td>{title}</td>\n          <User user={user} />\n          <td>{completed ? 'completed' : 'not completed'}</td>\n        </tr>\n      </tbody>\n    </>\n  );\n}\n\nexport default TodoItem;\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    user: PropTypes.objectOf(PropTypes.any),\n  }).isRequired,\n};\n","export default {\n  USERS: 'https://jsonplaceholder.typicode.com/users',\n  TODOS: 'https://jsonplaceholder.typicode.com/todos',\n};\n","export default function(url) {\n  return fetch(url).then(response => response.json());\n}\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\nimport url from '../api/urls';\nimport getData from '../api/Api';\n\nfunction TodoList({ ActiveSortBtn, filterType }) {\n  const initialState = {\n    loading: true,\n    preparedData: [],\n  };\n\n  const [state, setState] = useState(initialState);\n\n  useEffect(() => {\n    async function fetchData() {\n      const todos = await getData(url.TODOS);\n      const users = await getData(url.USERS);\n\n      setState(prevState => ({\n        ...prevState,\n        loading: false,\n        preparedData: todos.map(todo => ({\n          ...todo,\n          user: users.find(user => user.id === todo.userId),\n        })),\n\n      }));\n    } fetchData();\n  }, []);\n\n  const { preparedData } = state;\n\n  const dataFromServerForRender = () => {\n    const { sortById, sortByStatus, sortByUsersName, sortByTitle } = filterType;\n    const { sortValue, clickedSortBtn } = ActiveSortBtn;\n    let result = [];\n\n    switch (sortValue) {\n      case sortById:\n        result = !clickedSortBtn\n          ? [...preparedData].sort((a, b) => a.id - b.id)\n          : [...preparedData].sort((a, b) => b.id - a.id);\n        break;\n      case sortByStatus:\n        result = !clickedSortBtn\n          ? [...preparedData].sort((a, b) => a.completed - b.completed)\n          : [...preparedData].sort((a, b) => b.completed - a.completed);\n        break;\n      case sortByUsersName:\n        result = !clickedSortBtn\n          ? [...preparedData]\n            .sort((a, b) => a.user.name.localeCompare(b.user.name))\n          : [...preparedData]\n            .sort((a, b) => b.user.name.localeCompare(a.user.name));\n        break;\n      case sortByTitle:\n        result = !clickedSortBtn\n          ? [...preparedData]\n            .sort((a, b) => a.title.localeCompare(b.title))\n          : [...preparedData]\n            .sort((a, b) => b.title.localeCompare(a.title));\n        break;\n      default: result = preparedData;\n    }\n\n    return result;\n  };\n\n  return (\n\n    <>\n\n      { state.loading\n\n        && (\n          <thead className=\"spiner\">\n            <tr>\n              {Array(Object.values(filterType)\n                .map(loading => (\n                  <th key={loading}>\n                    {loading\n                      .replace(/[(A-Z )]+/, 'Loading...')}\n                  </th>\n                )))}\n            </tr>\n          </thead>\n\n        )\n      }\n\n      {dataFromServerForRender().map(todo => (\n        <TodoItem todo={todo} key={todo.id} />\n      ))}\n    </>\n\n  );\n}\n\nexport default TodoList;\n\nTodoList.propTypes = {\n  ActiveSortBtn: PropTypes.shape({\n    sortValue: '',\n    clickedSortBtn: null,\n  }).isRequired,\n};\n\nTodoList.propTypes = {\n  filterType: PropTypes.shape({\n    sortById: '',\n    sortByStatus: '',\n    sortByUsersName: '',\n    sortByTitle: '',\n  }).isRequired,\n};\n","import React, { useState } from 'react';\nimport TodoList from './components/TodoList';\nimport './css/App.css';\n\nconst SORT_TYPE = {\n  sortById: 'TODOS ID',\n  sortByTitle: 'TITLE',\n  sortByUsersName: 'USER NAME',\n  sortByStatus: 'STATUS',\n};\n\nfunction App() {\n  const initialState = {\n    isClickedLoadTodos: false,\n    isActiveSortBtn: {\n      clickedSortBtn: false,\n      sortValue: '',\n    },\n  };\n\n  const [state, setState] = useState(initialState);\n\n  const getListTodos = () => {\n    if (!state.isClickedLoadTodos) {\n      setState(prevState => ({\n        ...prevState,\n        isClickedLoadTodos: true,\n      }));\n    }\n  };\n\n  const handleSort = (idx, item) => {\n    setState(prevState => ({\n      ...prevState,\n      isActiveSortBtn: {\n        clickedSortBtn: isActiveSortBtn.sortValue === item\n          ? !isActiveSortBtn.clickedSortBtn\n          : true,\n        sortValue: item,\n      },\n    }));\n  };\n\n  const { isActiveSortBtn, isClickedLoadTodos } = state;\n  const { clickedSortBtn, sortValue } = isActiveSortBtn;\n\n  const activeIconBtn = (button) => {\n    if (sortValue === button && clickedSortBtn) {\n      return 'arrow_drop_down';\n    }\n\n    if (sortValue === button && !clickedSortBtn) {\n      return 'arrow_drop_up';\n    }\n\n    return 'sort_by_alpha';\n  };\n\n  return (\n    <div className=\"App\">\n\n      <h1 className=\"nav\">Dynamic list of todos</h1>\n      {!isClickedLoadTodos && (\n        <button\n          className=\"waves-effect waves-light btn-large\"\n          type=\"button\"\n          onClick={() => {\n            getListTodos();\n          }}\n        >\n        SHOW TODOS\n          <i className=\"material-icons right\">arrow_drop_down</i>\n        </button>\n      )\n      }\n\n      {isClickedLoadTodos\n      && (\n        <table className=\"highlight responsive-table centered\">\n          <thead>\n\n            <tr>\n              {Object.values(SORT_TYPE).map((button, i) => (\n                <th key={button}>\n                  <button\n                    onClick={() => handleSort(i, button)}\n                    className=\"waves-effect waves-light btn\"\n                    type=\"button\"\n                  >\n\n                    {button}\n                    <i className=\"material-icons right\">\n                      {activeIconBtn(button)}\n                    </i>\n                  </button>\n                </th>\n              ))}\n\n            </tr>\n          </thead>\n          <TodoList\n            ActiveSortBtn={isActiveSortBtn}\n            filterType={SORT_TYPE}\n          />\n\n        </table>\n      )\n      }\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}